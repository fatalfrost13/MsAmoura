@using Iomer.Umbraco.Extensions;
@inherits UmbracoViewPage<IPublishedContent>
@{
    ViewBag.Title = "Slider";
}
@{
    var currNode = umbraco.NodeFactory.Node.GetCurrent();
    var sliderNodeProperty = currNode.GetProperty("slideshowImages");

    List<umbraco.NodeFactory.Node> sliderNodes = new List<umbraco.NodeFactory.Node>();
    if (sliderNodeProperty != null && sliderNodeProperty.Value != string.Empty)
    {
        var sliderNodeIds = sliderNodeProperty.Value.Split(',').Select(i => int.Parse(i)).ToList();
        sliderNodes.AddRange(sliderNodeIds.Select(i => new umbraco.NodeFactory.Node(i)));
    }
}

@if (sliderNodes.Any())
{
    
<div id="camera5431c72f6f5ce" class="camera_wrap camera">

    @foreach (var sliderNode in sliderNodes)
    {
        var mediaId = Int32.Parse(sliderNode.GetProperty("image").Value);
        var imageUrl = Iomer.Umbraco.Extensions.NodeUtility.GetMediaPath(mediaId);
        var imageUrlThumbNail = imageUrl.Replace(".jpg","_thumb.jpg");
        var linkUrl = sliderNode.GetUrl("imageLink");
        var linkTarget = sliderNode.GetTarget("imageLink");

        if (linkUrl == sliderNode.Url)
        {
            linkUrl = string.Empty;
        }
        
        <div data-src='@imageUrl' data-thumb='@imageUrlThumbNail'> 
            <div class="camera_caption fadeFromBottom">
                @Html.Raw(sliderNode.GetProperty("imageDescription").Value)
            </div>
            
        <div style="width:100%; height:100%; border:solid 1px solid;cursor:pointer"
            @if(linkUrl != string.Empty){
                if (linkTarget == "_self"){
                    @:onclick="location.href='@linkUrl'"
                }else{
                    @:onclick="window.open('@linkUrl')"
                }
            }>
        </div>
            
        </div>
      
    }

</div>
    
}